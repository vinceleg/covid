{"version":3,"sources":["images/deaths.jpg","images/infected.jpg","images/recovered.jpg","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountrySelector/CountrySelector.jsx","App.js","index.js","components/Cards/Cards.module.css","components/CountrySelector/CountrySelector.module.css","App.module.css","components/Chart/Chart.module.css","images/title-image.png","images sync /^/.*/.jpg$"],"names":["module","exports","GridItem","heading","value","date","description","Grid","item","component","Card","xs","md","className","cs","styles","card","toLowerCase","CardMedia","media","image","require","title","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","toUpperCase","Cards","data","confirmed","recovered","deaths","lastUpdate","container","spacing","justify","url","fetchData","country","a","newURL","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","reportDate","fetchCountryData","countries","name","Chart","useState","setDailyData","useEffect","fetchFromAPI","covidLineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","covidBarChart","options","legend","display","text","CountrySelector","handleCountrySelect","setCountries","fetchCountries","FormControl","formControl","NativeSelect","nativeSelect","defaultValue","onChange","event","target","index","key","App","state","fetchedCountry","setState","fetchedData","this","headerImage","src","alt","React","Component","ReactDOM","render","document","getElementById","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve"],"mappings":"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","file":"static/js/main.7cf5386f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deaths.7f8d1014.jpg\";","module.exports = __webpack_public_path__ + \"static/media/infected.9115c512.jpg\";","module.exports = __webpack_public_path__ + \"static/media/recovered.224c1d14.jpg\";","// Cards that display Infected, Recovered, and Deaths totals\r\nimport React from 'react'\r\nimport { Card, CardContent, CardMedia, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cs from 'classnames';\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst GridItem = ({heading, value, date, description}) => {\r\n    return (\r\n        <Grid item component={Card} xs={12} md={3} className={cs(styles.card, styles[heading.toLowerCase()])}>\r\n            <CardMedia\r\n                className={styles.media}\r\n                image= {require('../../images/' + heading.toLowerCase() + '.jpg')}\r\n                title=\"Infected\"\r\n            />\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>{heading}</Typography>\r\n                <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={value} duration={2.5} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(date).toDateString()}</Typography>\r\n                <br/>\r\n                <Typography variant=\"body2\">NUMBER OF {description.toUpperCase()}</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    if (!confirmed){\r\n        return(\"Loading... \")\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n               <GridItem heading=\"Infected\" value={confirmed.value} date={lastUpdate} description=\"active COVID-19 cases\"/>\r\n               <GridItem heading=\"Recovered\" value={recovered.value} date={lastUpdate} description=\"recoveries\"/>\r\n               <GridItem heading=\"Deaths\" value={deaths.value} date={lastUpdate} description=\"deaths\"/>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","//Functions for fetching data from Covid19 API\r\nimport axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n// Fetch global or specified country's covid data\r\nexport const fetchData = async (country) => {\r\n    let newURL = url;\r\n    \r\n    // If given a country as an argument, sets url to get data for that country\r\n    if (country){\r\n        newURL = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(newURL);\r\n\r\n        const modifiedData = {\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate,\r\n        }\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// Fetch daily data used in Global line chart\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        return modifiedData\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// Fetch data for countries in bar charts\r\nexport const fetchCountryData = async() =>{\r\n    try {\r\n        const {data: {countries}}= await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","// Display line chart for Global covid cases and bar chart for Country covid cases\r\nimport React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data, country}) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchFromAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchFromAPI();\r\n    }, []);\r\n\r\n    const covidLineChart = (\r\n        dailyData.length ? (\r\n            <Line\r\n                data={{\r\n                    labels: dailyData.map(({date}) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({confirmed}) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                     }, {\r\n                        data: dailyData.map(({deaths}) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                }]}}\r\n            />) : null\r\n    );\r\n\r\n    const covidBarChart = (\r\n        data.confirmed ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People', \r\n                        backgroundColor: ['rgba(0, 100, 255, 0.6)', \r\n                            'rgba(0, 255, 0, 0.5)',\r\n                            'rgba(255, 0, 0, 0.6)',\r\n                        ],\r\n                        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? covidBarChart : covidLineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","// Input selector used to select a specific Country\r\nimport React, { useState, useEffect } from 'react'\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\nimport { fetchCountryData } from '../../api'\r\n\r\nimport styles from './CountrySelector.module.css';\r\n\r\nconst CountrySelector = ({handleCountrySelect}) => {\r\n    const [countries, setCountries] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchCountries = async () =>{\r\n            setCountries(await fetchCountryData());\r\n        }\r\n        fetchCountries();\r\n    }, [setCountries]);\r\n\r\n    \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect className={styles.nativeSelect} defaultValue=\"\" onChange={(event) => handleCountrySelect(event.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, index) => <option key={index} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n        \r\n}\r\n\r\nexport default CountrySelector;","import React from 'react';\r\nimport { Cards, Chart, CountrySelector } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport headerImage from './images/title-image.png'\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount (){\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData })\r\n    }\r\n\r\n    handleCountrySelect = async (country) => {\r\n        const fetchedCountry = await fetchData(country);\r\n        this.setState({ data: fetchedCountry, country: country });\r\n    }\r\n\r\n    render(){\r\n        const { data, country } = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.headerImage} src={headerImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountrySelector handleCountrySelect={this.handleCountrySelect}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container___ckdC\",\"card\":\"Cards_card__3UFBs\",\"media\":\"Cards_media__R_bck\",\"infected\":\"Cards_infected__-iS0q\",\"recovered\":\"Cards_recovered__3kR5A\",\"deaths\":\"Cards_deaths__PyunN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountrySelector_formControl__Fnd2-\",\"nativeSelect\":\"CountrySelector_nativeSelect__3O9CN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__FEY-0\",\"headerImage\":\"App_headerImage__1CdIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1nh1e\"};","module.exports = __webpack_public_path__ + \"static/media/title-image.74a9d93e.png\";","var map = {\n\t\"./deaths.jpg\": 100,\n\t\"./infected.jpg\": 101,\n\t\"./recovered.jpg\": 102\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 99;"],"sourceRoot":""}